.build_cmake_template: &build_cmake_template
  stage: build
  image: ${IMAGE}
  tags:
    - build
    - audio_server
  parallel: 2
  interruptible: true
  dependencies: # set dependencies to null to avoid missing artifacts issue
  variables:
    # Obtain release/${IDF_VERSION_TAG} first based on this variable. View details in the 'check_idf_version()' of utils.sh
    IDF_TAG_FLAG: "false"
    IDF_VERSION_TAG: v5.1
    DEEP_CLONE: "false"
    IDF_FIND_APP_PATH_ARG: "-p"
    IDF_PATH: "$ADF_PATH/esp-idf"
    IDF_PATCH_DIR: "$ADF_PATH/idf_patches"
    SDKCFG_DEFAULTS: "sdkconfig.defaults.$IDF_TARGET"
  artifacts:
    paths:
      - "**/build*/size.json"
      - "**/build*/build_log.txt"
      - "**/build*/*.bin"
      # upload to s3 server to save the artifacts size
      # - "**/build*/*.map"
      # ttfw tests require elf files
      - "**/build*/*.elf"
      - "**/build*/flasher_args.json"
      - "**/build*/flash_project_args"
      - "**/build*/config/sdkconfig.json"
      # ttfw tests require sdkconfig file
      - "**/build*/sdkconfig"
      - "**/build*/bootloader/*.bin"
      - "**/build*/partition_table/*.bin"
      - list_job_*.json
      - size_info.txt
      # unit test specific
      - components/idf_test/unit_test/*.yml
    when: always
    expire_in: 4 days
  script:
    - echo $SDKCFG_DEFAULTS
    - echo $IDF_PATCH_DIR
    - fetch_idf_branch ${IDF_VERSION_TAG}
    - common_before_scripts
    - setup_tools_and_idf_python_venv
    - set_env_variable
    - check_apps_and_filter
    - cd $ADF_PATH
    - cd $IDF_PATH; git apply $IDF_PATCH_DIR/$IDF_PATCH; cd -
    # - pip install --upgrade idf-component-manager
    - echo ${CI_NODE_INDEX}
    - echo ${parallel}
    - pip install idf_build_apps
    - run_cmd python $ADF_PATH/tools/ci/build_apps.py ${EXAMPLES} \
                   -t $IDF_TARGET -vv \
                   --parallel-count ${parallel##*/} \
                   --parallel-index ${parallel%%/*}

.matrix_template_esp32_esp32s3_esp32s2: &matrix_template_esp32_esp32s3_esp32s2
  parallel:
    matrix:
      - IDF_VERSION_TAG: ['v5.0', 'v5.1']
        parallel: [1/2, 2/2]

.matrix_template_esp32c3_esp32c6: &matrix_template_esp32c3_esp32c6
  parallel:
    matrix:
      - IDF_VERSION_TAG: ['v5.1']
        parallel: [1/2, 2/2]

build_examples_cmake_esp32_lyrat_v4_3:
  extends:
    - .rules:build:regular-board-idf-ver-tag
    - .build_cmake_template
    - .matrix_template_esp32_esp32s3_esp32s2
  variables:
    IDF_TARGET: esp32
    AUDIO_BOARD: ESP_LYRAT_V4_3

build_examples_cmake_esp32_lyratd_msc_v2_2:
  extends:
    - .rules:build:non-regular-board-idf-ver-tag
    - .build_cmake_template
    - .matrix_template_esp32_esp32s3_esp32s2
  variables:
    IDF_TARGET: esp32
    AUDIO_BOARD: ESP_LYRATD_MSC_V2_2

build_examples_cmake_esp32_lyrat_mini_v1_1:
  extends:
    - .rules:build:non-regular-board-idf-ver-tag
    - .build_cmake_template
    - .matrix_template_esp32_esp32s3_esp32s2
  variables:
    IDF_TARGET: esp32
    AUDIO_BOARD: ESP_LYRAT_MINI_V1_1

build_examples_cmake_esp32s2_kaluga_v1_2:
  extends:
    - .rules:build:regular-board-idf-ver-tag
    - .build_cmake_template
    - .matrix_template_esp32_esp32s3_esp32s2
  variables:
    IDF_TARGET: esp32s2
    AUDIO_BOARD: ESP32_S2_KALUGA_1_V1_2

build_examples_cmake_esp32s3_korvo_v2:
  extends:
    - .rules:build:regular-board-idf-ver-tag
    - .build_cmake_template
    - .matrix_template_esp32_esp32s3_esp32s2
  variables:
    IDF_TARGET: esp32s3
    AUDIO_BOARD: ESP32_S3_KORVO2_V3

build_examples_cmake_esp32c3_lyra_v2:
  extends:
    - .rules:build:regular-board-idf-ver-tag
    - .build_cmake_template
    - .matrix_template_esp32c3_esp32c6
  variables:
    IDF_TARGET: esp32c3
    AUDIO_BOARD: ESP32_C3_LYRA_V2

build_examples_cmake_esp32c6_devkit:
  extends:
    - .rules:build:regular-board-idf-ver-tag
    - .build_cmake_template
    - .matrix_template_esp32c3_esp32c6
  variables:
    IDF_TARGET: esp32c6
    AUDIO_BOARD: ESP32_C6_DEVKIT
